// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SporKulubuYS_Service.Model;

#nullable disable

namespace SporKulubuYS_Service.Migrations
{
    [DbContext(typeof(SporKulubuDB))]
    [Migration("20240702055454_yeni")]
    partial class yeni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SporKulubuYS_Service.Model.Antrenor", b =>
                {
                    b.Property<int>("AntrenorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AntrenorId"));

                    b.Property<string>("AntrenorAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AntrenorDogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("AntrenorSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Uzmanlık")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("AntrenorId");

                    b.ToTable("Antrenorler");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Brans", b =>
                {
                    b.Property<int>("BransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BransId"));

                    b.Property<string>("BransAd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("BransId");

                    b.ToTable("Branslar");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.BransAntrenor", b =>
                {
                    b.Property<int>("BransAntrenorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BransAntrenorId"));

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.HasKey("BransAntrenorId");

                    b.HasIndex("AntrenorId");

                    b.HasIndex("BransId");

                    b.ToTable("BransAntrenorler");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Etkinlik", b =>
                {
                    b.Property<int>("EtkinlikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtkinlikId"));

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.Property<string>("EtkinlikAciklama")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EtkinlikAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EtkinlikTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtkinlikYer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EtkinlikId");

                    b.HasIndex("BransId");

                    b.ToTable("Etkinlikler");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Salon", b =>
                {
                    b.Property<int>("SalonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalonId"));

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("SalonAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalonYer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalonId");

                    b.HasIndex("BransId");

                    b.ToTable("Salonlar");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Sporcu", b =>
                {
                    b.Property<int>("SporcuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SporcuId"));

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SporcuAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SporcuDogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SporcuSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SporcuId");

                    b.ToTable("Sporcular");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.SporcuBrans", b =>
                {
                    b.Property<int>("SporcuBransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SporcuBransId"));

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.Property<int>("SporcuId")
                        .HasColumnType("int");

                    b.HasKey("SporcuBransId");

                    b.HasIndex("BransId");

                    b.HasIndex("SporcuId");

                    b.ToTable("SporcuBranslar");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.BransAntrenor", b =>
                {
                    b.HasOne("SporKulubuYS_Service.Model.Antrenor", "Antrenor")
                        .WithMany("BransAntrenorler")
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporKulubuYS_Service.Model.Brans", "Brans")
                        .WithMany("BransAntrenorler")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antrenor");

                    b.Navigation("Brans");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Etkinlik", b =>
                {
                    b.HasOne("SporKulubuYS_Service.Model.Brans", "Brans")
                        .WithMany("Etkinlikler")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Salon", b =>
                {
                    b.HasOne("SporKulubuYS_Service.Model.Brans", "Brans")
                        .WithMany("Salonlar")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.SporcuBrans", b =>
                {
                    b.HasOne("SporKulubuYS_Service.Model.Brans", "Brans")
                        .WithMany("SporcuBranslar")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporKulubuYS_Service.Model.Sporcu", "Sporcu")
                        .WithMany("SporcuBranslar")
                        .HasForeignKey("SporcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");

                    b.Navigation("Sporcu");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Antrenor", b =>
                {
                    b.Navigation("BransAntrenorler");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Brans", b =>
                {
                    b.Navigation("BransAntrenorler");

                    b.Navigation("Etkinlikler");

                    b.Navigation("Salonlar");

                    b.Navigation("SporcuBranslar");
                });

            modelBuilder.Entity("SporKulubuYS_Service.Model.Sporcu", b =>
                {
                    b.Navigation("SporcuBranslar");
                });
#pragma warning restore 612, 618
        }
    }
}
